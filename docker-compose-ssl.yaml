
version: '3'

services:
  api:
    build: .
    command: >
      sh -c "gunicorn core.wsgi:application --bind 0.0.0.0:9000"
    ports:
      - '9000:9000'
    restart: unless-stopped
    depends_on:
      - postgres
      - migration
    volumes:
      - .:/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    environment:
      - VIRTUAL_HOST=gulsdem.pp.ua
      - LETSENCRYPT_HOST=gulsdem.pp.ua

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  migration:
    build: .
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py collectstatic --noinput"
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres
      - api

  nginx:
    image: jwilder/nginx-proxy:1.2
    container_name: docker_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default_location:/etc/nginx/vhost.d/default_location
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - certs:/etc/nginx/certs
    depends_on:
      - api

  acme_companion:
    image: nginxproxy/acme-companion:2.2
    container_name: acme_companion
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - acme:/etc/acme.sh

  cors-container:
    restart: always
    ports:
      - "3000:3000"
    container_name: cors-container
    image: saschabrockel/cors-container:latest

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  acme:
  vhost:
  html: